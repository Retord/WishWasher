"""
Script to analyze messages and determine friend relations
"""

import fb
import relationship
import requests
import string

def bday_wish(message):
	""" Analyze message to ascertain if it is a birthday wish
	    Params:
		       meassage: The message received from FB friend

		Note: This is a temporary hack. Hope to make it better soon via statistical NLP
	"""

	#assert type(message) == str
	
	keywords = ["birthday", "birth", "happy", "bday", "hpy", "hbd", "hb", "happi", "best", "memorable", "awesome", "fantastic", "super", "bappy", "hirthday", "returns", "many", "bless", "god", "belated"]
	
	expansion = {"hbd":["happy", "birthday"], "hb":["happy", "birthday"]}	


	s = ''.join(c for c in message if c not in string.punctuation and c in string.printable)
	t = s.lower().split()

	l = []
	for x in t:
		if x in expansion.keys():
			l.extend(expansion[x])
		else:
			l.append(x)
	
			
	
	count = 0

	
	for x in l:
		
		if x in keywords:
			count += 1
			continue
		
		else:		
			for k in keywords:
				if x.count(k):
					count += 1
					break

			
	if count >= 2:
		return True
	else:
		return False





def get_message(post, friend):
	""" Create the message to be posted as a reply
	    Input:
		     Dictionary representing FB wall post
			 Dictionary representing FB friend who posted

		Returns: A reply message to be posted in the comments

		IMP NOTE: This function is very user specific. You are advised to edit this to get it to work for you properly.
	"""
	
	
	relation = relationship.get_relation(friend)
	message = "Thank you very very much, "
	
	if relation:
		honorific, useName = relationship.get_honorific(relation)

		if useName:
			message = message + friend["first_name"] + honorific
		else:
			message = message + honorific
		
	else:

		message = message + friend["first_name"]
		
		

	message = message + "! :D \n\n(Reply generated by WishWasher bot. This does not mean I am ungrateful for your kind wishes)"

	return message
